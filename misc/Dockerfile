FROM oven/bun:slim AS build

WORKDIR /app

COPY package.json bun.lockb tsconfig.json ./
RUN \
  if [ -f bun.lockb ]; then bun install --frozen-lockfile; \
  else echo "Lockfile not found." && exit 1; \
  fi

COPY ./src ./src
COPY ./prisma ./prisma

RUN bunx prisma generate
RUN bun build \
	--compile \
	--minify-whitespace \
	--minify-syntax \
	--target bun \
	--outfile server \
	./src/index.ts

FROM gcr.io/distroless/cc

WORKDIR /app

COPY --from=build /app/server server
COPY --from=build /app/node_modules/.prisma /app/node_modules/.prisma
COPY --from=build /app/node_modules/@prisma /app/node_modules/@prisma

ARG PORT
ARG NODE_ENV
ARG BASE_URL
ARG DOMAIN
ARG PASSWORD_PEPPER
ARG DATABASE_URL

ARG GOOGLE_CLIENT_ID
ARG GOOGLE_CLIENT_SECRET
ARG GITHUB_CLIENT_ID
ARG GITHUB_CLIENT_SECRET
ARG LINKEDIN_CLIENT_ID
ARG LINKEDIN_CLIENT_SECRET
ARG TELEGRAM_TOKEN
ARG TELEGRAM_CHAT_ID

ARG CLOUDINARY_CLOUD_NAME
ARG CLOUDINARY_API_KEY
ARG CLOUDINARY_API_SECRET

ARG AZURE_AI_URL
ARG AZURE_AI_API_KEY

ARG AXIOM_SECRET_TOKEN
ARG AXIOM_DATASET

ARG REDIS_URL

ENV PORT=$PORT
ENV NODE_ENV=$NODE_ENV
ENV BASE_URL=$BASE_URL
ENV DOMAIN=$DOMAIN
ENV PASSWORD_PEPPER=$PASSWORD_PEPPER
ENV DATABASE_URL=$DATABASE_URL

ENV GOOGLE_CLIENT_ID=$GOOGLE_CLIENT_ID
ENV GOOGLE_CLIENT_SECRET=$GOOGLE_CLIENT_SECRET
ENV GITHUB_CLIENT_ID=$GITHUB_CLIENT_ID
ENV GITHUB_CLIENT_SECRET=$GITHUB_CLIENT_SECRET
ENV LINKEDIN_CLIENT_ID=$LINKEDIN_CLIENT_ID
ENV LINKEDIN_CLIENT_SECRET=$LINKEDIN_CLIENT_SECRET
ENV TELEGRAM_TOKEN=$TELEGRAM_TOKEN
ENV TELEGRAM_CHAT_ID=$TELEGRAM_CHAT_ID

ENV CLOUDINARY_CLOUD_NAME=$CLOUDINARY_CLOUD_NAME
ENV CLOUDINARY_API_KEY=$CLOUDINARY_API_KEY
ENV CLOUDINARY_API_SECRET=$CLOUDINARY_API_SECRET

ENV AZURE_AI_URL=$AZURE_AI_URL
ENV AZURE_AI_API_KEY=$AZURE_AI_API_KEY

ENV AXIOM_SECRET_TOKEN=$AXIOM_SECRET_TOKEN
ENV AXIOM_DATASET=$AXIOM_DATASET

ENV REDIS_URL=$REDIS_URL

CMD ["./server"]
